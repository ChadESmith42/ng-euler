import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'euler-even-fibonacci-numbers',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './even-fibonacci-numbers.component.html',
  styleUrls: ['./even-fibonacci-numbers.component.scss']
})
export class EvenFibonacciNumbersComponent implements OnInit {
  description: string[] = [
    `Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.`,
    `By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.`
  ];
  fibonacciSequence: number[] = [];
  total: number = 0;
  ngOnInit(): void {
    this.getFibonacciSequence();
    this.total = this.getEvenNumbersSum(this.fibonacciSequence);
  }

  getFibonacciSequence(): number[] {
    let a: number = 1;
    let b: number = 2;
    let c: number = 0;
    this.fibonacciSequence = [a, b];
    while (a + b < 4000000) {
      c = a + b;
      this.fibonacciSequence.push(c);
      a = b;
      b = c;
    }
    return this.fibonacciSequence;
  }

  getEvenNumbersSum(numbers: number[]): number {
    let total: number = 0;
    numbers.map(n => {
      n % 2 === 0 ? total += n : null;
    });
    return total;
  }
}
